using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Persistence.Migrations
{
    /// <inheritdoc />
    public partial class init2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 83, 42, 215, 71, 247, 106, 20, 115, 109, 171, 152, 216, 104, 6, 3, 178, 98, 242, 213, 69, 111, 73, 27, 185, 102, 140, 110, 115, 119, 20, 128, 163, 60, 165, 209, 11, 100, 99, 75, 237, 229, 15, 90, 25, 18, 61, 68, 103, 255, 163, 232, 90, 55, 156, 217, 210, 5, 154, 254, 47, 41, 11, 54, 61 }, new byte[] { 3, 33, 210, 92, 137, 25, 163, 106, 82, 164, 171, 83, 132, 250, 207, 217, 217, 252, 219, 147, 176, 3, 125, 134, 7, 232, 192, 136, 248, 151, 210, 55, 75, 219, 83, 154, 190, 180, 234, 62, 157, 240, 167, 2, 177, 39, 89, 164, 199, 146, 230, 87, 184, 223, 97, 197, 205, 233, 32, 253, 215, 20, 194, 82, 62, 249, 12, 229, 236, 202, 144, 92, 212, 211, 240, 188, 223, 126, 228, 94, 23, 204, 172, 60, 33, 126, 109, 202, 70, 212, 168, 167, 85, 233, 197, 134, 142, 120, 92, 130, 149, 104, 23, 76, 25, 141, 16, 38, 164, 37, 9, 58, 16, 40, 86, 0, 143, 177, 169, 206, 210, 112, 180, 223, 184, 10, 183, 145 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 66, 251, 153, 12, 177, 82, 164, 34, 114, 129, 73, 199, 100, 45, 253, 208, 57, 255, 57, 6, 187, 104, 252, 194, 225, 100, 157, 95, 48, 98, 52, 188, 224, 100, 176, 235, 210, 10, 225, 216, 81, 93, 178, 184, 215, 120, 216, 216, 152, 84, 40, 194, 241, 14, 171, 171, 128, 207, 22, 22, 110, 116, 249, 194 }, new byte[] { 83, 39, 78, 131, 12, 181, 131, 72, 105, 41, 22, 50, 96, 212, 67, 246, 146, 187, 109, 201, 39, 208, 140, 208, 80, 122, 145, 63, 81, 245, 162, 243, 38, 149, 225, 106, 12, 189, 185, 148, 251, 89, 201, 171, 74, 61, 193, 206, 148, 39, 135, 5, 90, 125, 55, 49, 26, 94, 242, 71, 202, 3, 192, 248, 103, 28, 219, 113, 169, 227, 162, 236, 140, 0, 133, 175, 252, 29, 247, 106, 223, 32, 203, 104, 242, 134, 42, 136, 4, 103, 113, 59, 22, 103, 170, 48, 86, 243, 26, 45, 101, 144, 90, 201, 60, 37, 100, 50, 242, 254, 47, 88, 45, 70, 38, 50, 166, 204, 46, 95, 165, 198, 116, 212, 29, 9, 49, 63 } });
        }
    }
}
